(* ::Package:: *)

(* ::Input:: *)
(*BeginPackage["MSDP"]*)
(**)
(*(*L.T. 11/19/2014, W.K. 11/26/2014*)*)
(**)
(*DiscWithMat[X_] :=*)
(*Module[{N,Y,Z,Q,fn,gn,Dirac,yq,D1,D2,zq,zqd},*)
(*Dirac[f_]:=If[f[#],1,0] &;*)
(**)
(*fn[{v_,w_,x_}]:=Module[{n,nn,norm},*)
(*n = Cross[w-v,x-v];*)
(*norm=Norm[n];*)
(**)
(*If[norm > 0,*)
(*nn = n / norm;*)
(*{*)
(*nn,*)
(*nn.v*)
(*},*)
(*{{0,0,0},0}]];*)
(**)
(*fn[{v_,w_}]:=Module[{n,nn,norm},*)
(*n = v + w;*)
(*norm = Norm[n];*)
(**)
(*If[norm > 0,*)
(*nn = n /norm;*)
(*{*)
(*nn,*)
(*nn.v*)
(*},*)
(*{{0,0,0},0}]];*)
(**)
(*gn[{v_,w_,x_}]:=Module[{n,nn,norm},*)
(*n = Cross[w-v,x-v];*)
(*norm=Norm[n];*)
(**)
(*If[norm > 0,*)
(*nn = n / norm;*)
(*{*)
(*(1-nn.v)/2*)
(*},*)
(*{0}]];*)
(**)
(*gn[{v_,w_}]:=Module[{n,nn,norm},*)
(*n = v + w;*)
(*norm = Norm[n];*)
(**)
(*If[norm > 0,*)
(*nn = n /norm;*)
(*{*)
(*(1-nn.v)/2*)
(*},*)
(*{0}]];*)
(**)
(**)
(*N = Length[X];*)
(*(*Print[N];*)*)
(*yq = Map[fn,Subsets[X,{2,3}]];*)
(*(*Print[yq];*)*)
(*Y = yq[[;;,1]];*)
(*(*Print[Y]*);*)
(*Q = yq[[;;,2]];*)
(*(*Print[Q];*)*)
(*Z = X.Transpose[Y];*)
(*(*Print[Z]*);*)
(*zq = Transpose[Map[# - Q &,Z]];*)
(*(*Print[zq]*);*)
(*zqd = Map[Dirac[# >0 &],zq,{2}];*)
(*(*Print[zqd//MatrixForm];*)*)
(*D1= (1/N)Map[Plus @@ #&,zqd];*)
(*D2= Map[gn,Subsets[X,{2,3}]];*)
(*(*Print[D2];*)*)
(*Max[Abs[D1-D2]]];*)
(**)
(**)
(**)


(* ::Input:: *)
(*FLPS[n_]:=Module[{Fn,r},Fn=Fibonacci[n];r=Fibonacci[n-1]/Fn;Table[{k/Fn,FractionalPart[k r]},{k,0,Fn-1}]];*)
(*Phi[x_,y_]:={2Sqrt[y-y^2]Cos[2\[Pi] x],2Sqrt[y-y^2]Sin[2\[Pi] x],1-2y};*)
(**)
(*sphFLPS[n_]:=Phi[#[[1]],#[[2]]]&/@FLPS[n];*)
(*NsphFLPS[n_]:=Phi[#[[1]],#[[2]]]&/@FLPS[n]//N;*)
(**)


(* ::Input:: *)
(*TT=Table[DiscWithMat[NsphFLPS[i]] // AbsoluteTiming,{i,3,10}];*)


(* ::Input:: *)
(*TetraPts:={{1,0,-1/Sqrt[2]},{-1,0,-1/Sqrt[2]}, {0,1,1/Sqrt[2]},{0,-1,1/Sqrt[2]}}/Norm[{1,0,-1/Sqrt[2]}];*)
(*UniPoint[u_,t_]:={Sqrt[1-u^2]Cos[t],Sqrt[1-u^2]Sin[t],u};*)
(*SeedRandom[621859188853648];*)
(*ZZZ[k_]:=Table[UniPoint[RandomReal[{-1,1}], RandomReal[{0,2Pi}]],{i,k}];*)


(* ::Input:: *)
(*EndPackage[]*)
